---
- hosts: all
  tasks:
  - name: Create FunctionApp on Azure portal
    shell: "az functionapp create
            --resource-group {{ resource_group_name }}
            --os-type Linux \
            --consumption-plan-location westeurope
            --runtime python \
            --runtime-version 3.7 \
            --name {{ function_app_name }}
            --storage-account {{ storage_account_name }}"

  - name: Get connection string
    shell: "echo $(az storage account show-connection-string -g {{ resource_group_name }} -n {{ storage_account_name }})"
    register: azure_blob_conn_str

  - name: Unpack connection string dictionary
    debug:
      msg: "{{item.key}}: {{item.value}}"
    with_dict: "{{ azure_blob_conn_str.stdout }}"
    register: conn_str_dict_item

  - name: Set attributes
    set_stats:
      data:
        azure_connection_string: "{{ conn_str_dict_item.results[0].item.value }}"

  - name: Set application settings for storage credentials
    command: "az webapp config appsettings set -g {{ resource_group_name }}  -n {{ function_app_name }} --settings CONNECT_STR={{ conn_str_dict_item.results[0].item.value }} CONTAINER_OUT_NAME={{ container_out_name }}"

#  - name: Prepare python packages
#    command: "pip install --target ./functions/.python_packages/lib/site-packages -r functions/requirements.txt"
#
#  - name: Compress function directory into zip file
#    archive:
#      format: zip
#      path: "./functions"
#      dest: "{{ zip_file_name }}"

#  - name: Create container for zipdeploy and upload a file
#    azure_rm_storageblob:
#      resource_group: "{{ resource_group_name }}"
#      storage_account_name: "{{ storage_account_name }}"
#      container: "{{ container_zip_name }}"
#      blob: "{{ zip_file_name }}"
#      src:  "{{ zip_file_name }}"
#      public_access: container

#  - name: Create a valid start date for Azure SAS
#    command: "date -u '+%Y-%m-%dT%H:%MZ'"
#    register: start_date
#
#  - name: Create a valid expiry date for Azure SAS
#    command: "date -u -d '30 minutes' '+%Y-%m-%dT%H:%MZ'"
#    register: expiry_date
#
#  - name: Generate a shared access signature (SAS) for the zip blob in container
#    command: "az storage blob generate-sas \
#              --account-name {{ storage_account_name }} \
#              --container-name {{ container_zip_name }} \
#              --name {{ zip_file_name }} \
#              --permissions rw \
#              --start {{ start_date.stdout }} \
#              --expiry {{ expiry_date.stdout }} \
#              --auth-mode key \
#              --full-uri"
#    register: azure_blob_sas_url

  - name: Deploy function to Azure
    shell: "func azure functionapp publish {{ function_app_name }} --build remote --python"
    args:
      chdir: "functions"
    register: function_deploy_info

#  - name: Enable running from package and set WEBSITE_RUN_FROM_PACKAGE variable
#    command: "az webapp config appsettings set --resource-group {{ resource_group_name }} --name {{ function_app_name }} --settings WEBSITE_RUN_FROM_PACKAGE={{ azure_blob_sas_url.stdout }}"
...